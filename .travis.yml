##TRAVIS CI YAML

##MIXER C++ with Crow Microframework
language: cpp
sudo: true
compiler:
  - gcc
env:
  matrix:
    - COMPILER=g++-4.8 CCOMPILER=gcc-4.8 PUSH_COVERAGE=ON
addons:
  apt:
    sources:
      - ubuntu-toolchain-r-test
      - boost-latest
    packages:
      - g++-4.8
      - libboost1.55-all-dev
      
script: make && ctest
after_success:
  - cd ..
  - if [ "PUSH_COVERAGE" == "ON" ]; then coveralls --gcov gcov-4.8 -i include --gcov-options '\-lp'; fi

##install: make get-deps
##./configure && make && make test
##https://github.com/ipkn/crow.git
##sudo apt-get install build-essential libtcmalloc-minimal4
##sudo ln -s /usr/lib/libtcmalloc_minimal.so.4 /usr/lib/libtcmalloc_minimal.so
##install:
##  - if [ "$PUSH_COVERAGE" == "ON" ]; then pip install --user git+git://github.com/eddyxu/cpp-coveralls.git; fi
##before_script:
##  - export CXX=$COMPILER CC=$CCOMPILER
##  - mkdir build
##  - cd build
##  - cmake --version
##  - cmake ..
##sudo apt-get install libboost-all-dev
##sudo apt-get install cmake



GOLANG
EX1
language: go
go: 
 - 1.5.1
 - release
 - tip
script:
 - go test -v ./...

EX2
language: go
go:
  - 1.3
env:
  - "PATH=/home/travis/gopath/bin:$PATH"
before_install:
  - go get github.com/mitchellh/gox
  - gox -build-toolchain
  - go get github.com/tcnksm/ghr
  - go get github.com/axw/gocov/gocov
  - go get github.com/mattn/goveralls
  - go get code.google.com/p/go.tools/cmd/cover
script:
  - go test -v -covermode=count -coverprofile=coverage.out ./...
  - goveralls -coverprofile=coverage.out -service travis-ci -repotoken $COVERALLS_TOKEN
after_success:
  - gox -output "dist/{{.OS}}_{{.Arch}}_{{.Dir}}"
  - ghr --username tcnksm-sample --token $GITHUB_TOKEN --replace --prerelease --debug pre-release dist/

EX3
language: go
sudo: false
before_script:
  - go vet ./...
install:
  # Add Godeps dependencies to GOPATH and PATH
  - export GOPATH="${TRAVIS_BUILD_DIR}/Godeps/_workspace:$GOPATH"
  - export PATH="${TRAVIS_BUILD_DIR}/Godeps/_workspace/bin:$PATH"


JAVA
EX1
language: java
scala:
- 2.10.4
jdk:
- oraclejdk8
- oraclejdk7
services: mongodb
script:
- sbt scoverage:test
- sbt coveralls
env:
  global:
  - MONGO_PORT=27017
  - secure: d+Jo3HwjYCnpHLWFr0bsauv0/5OhKl0iSFlGlRo0Ybnv6ii9jo5qYUSV9gVXRFlypOfEmu3gCNzv6GxTLZsTivV38qpVJypDV0N1cGUl7nRmTanU0Ba9LjtusD6dCRqbfOhggdk4mNf7KFNJ6DA1NQHCRuwmOBCLtebu6WaMC5Y=
  - secure: LumeI7Zr5Cpotm9pLv3F8116Vt5FwhITfnnqhTCA7iXcHVHVuUz+8mVk3PHuL45Nmbcpivc6B80DhFC5JqeXU3CCrftEETmH29A1uJlS6qkpfj6HjeN1yPVG4qCRWUM0Y/GlDkxH+DlTt5UCTPmRmR5OduLoZYT8iFnrE/74gfA=
  - secure: IcZGkHw+qgLT/fHvw7Ifae7SRFybRFLXmA5zsaXBhKTSVTLTd7aTHrEau0+bkEBzk1Nu7SZKZMthV0JDJ+wwPCky5F7KLVX/Tqo9zJK/IJRqVKNtIRLUqb/9HlWyl11AgyZhE+6RcOATaEfDk1ncqye2ZkoKDlhOnTNZSqxCYBc=
after_success:
  - >
      test "${TRAVIS_PULL_REQUEST}" = 'false' &&
      test "${TRAVIS_JDK_VERSION}" = 'oraclejdk7' &&
      sbt 'set credentials += Credentials("Sonatype Nexus Repository Manager", "oss.sonatype.org", System.getenv("SONATYPE_USER"), System.getenv("SONATYPE_PASS"))' publish


EX2
language: java

install: cd HermiT;mvn install -DskipTests=true;cd ..

script: ant test-hard && cd HermiT && mvn test

jdk:
  - openjdk7

notifications:
  email:
    - travis@russet.org.uk


EX3
language: java
jdk:
  - oraclejdk8
 
before_script:
  - npm install -g grunt-cli
  - npm install -g bower
  - npm install -g tsd
 
script: ./gradlew test


PYTHON
EX1
language: python
python:
  - "2.6"
  - "2.7"
env:
  - DJANGO=1.2.7
  - DJANGO=1.3.1
  - DJANGO=1.4
install:
  - pip install -q Django==$DJANGO --use-mirrors
  - pip install pep8 --use-mirrors
  - pip install https://github.com/dcramer/pyflakes/tarball/master
  - pip install -q -e . --use-mirrors
before_script:
  - "pep8 --exclude=migrations --ignore=E501,E225 src"
  - pyflakes -x W src
script:
  - python setup.py test


EX2
language: python
python:
  - 3.4
  - pypy
env:
  - FLASK=0.9
install:
  - pip install -r requirements.txt
  - pip install -r requirements-test.txt
  - pip install coveralls
script:
  - coverage run --source=slumber setup.py test
after_success:
  - coveralls

EX3
python:
  - "2.6"
  - "2.7"


install:
  - pip install flask==$FLASK --use-mirrors
  - pip install -e . --use-mirrors
script:
  - python setup.py test


RUBY
EX1
language: ruby
bundler_args: --without development --path=~/.bundle
rvm:
- 2.0.0
before_install:
- 'echo ''gem: --no-ri --no-rdoc'' > ~/.gemrc'
- gem install bundler bundle_cache
- bundle_cache_install
before_script:
- cp config/database.travis.yml config/database.yml
- bundle exec rake db:create db:migrate db:schema:load
after_script:
- bundle_cache
env:
  global:
  - BUNDLE_ARCHIVE="test-bundle"
  - AWS_S3_BUCKET="travisci-bundler-cache"
  - RAILS_ENV=test


EX2
# .travis.yml
language: ruby
rvm:
  - 1.9.3
env:
  - DB=sqlite
  - DB=mysql
  - DB=postgresql
script:
  - RAILS_ENV=test bundle exec rake db:migrate --trace
  - bundle exec rake db:test:prepare
  - bundle exec rake
before_script:
  - cp config/database.travis.yml config/database.yml
  - mysql -e 'create database strano_test'
  - psql -c 'create database strano_test' -U postgres


# config/database.travis.yml
sqlite: &sqlite
  adapter: sqlite3
  database: db/<%= Rails.env %>.sqlite3

mysql: &mysql
  adapter: mysql2
  username: root
  password:
  database: strano_<%= Rails.env %>

postgresql: &postgresql
  adapter: postgresql
  username: postgres
  password:
  database: strano_<%= Rails.env %>
  min_messages: ERROR

defaults: &defaults
  pool: 5
  timeout: 5000
  host: localhost
  <<: *<%= ENV['DB'] || "postgresql" %>

development:
  <<: *defaults

test:
  <<: *defaults

production:
  <<: *defaults



NODE JS
EX1
language: node_js
node_js:
  - '0.10'
before_install:
  - npm install -g grunt-cli
  - npm install -g bower
  - npm install
  - bower install
  - npm install -g jashkenas/coffeescript
  - "curl -L https://raw.githubusercontent.com/arunoda/travis-ci-laika/master/configure.sh | /bin/sh"
services:
  - mongodb
env:
  - LAIKA_OPTIONS="-t 5000"
notifications:
  email:
    on_success: never

EX2
language: node_js
node_js:
  - 0.12
before_script:
  ./node_modules/.bin/cake build
before_install:
  - npm install coffee-script

EX3
language: node_js
node_js:
  - 0.8
before_script:
  coffee --compile -o lib src
before_install:
  - npm install coffee-script




DEPLOY
script: echo "like it's cat meow 99" && true

before_deploy:
  - zip -r latest *
  - mkdir -p dpl_cd_upload
  - mv latest.zip dpl_cd_upload/latest.zip

deploy:
  - provider: s3
    access_key_id: AKIAJ4XZHIMNKP3WGGHQ
    secret_access_key: &1
      secure: F3pFbaxwO+/wSVoulVNzG7YoUxYIoAN2voWuTMQr0L7of2DkjJx73xguPL4l+DnpQhtPEFCk7Fn+taF7FjtQuYBVXQkuM+9aaPW2PU+fvxLYck598dSCKJuKuMGJzK9njlg6tfZdeDrPm+hep+xN4NRXO3iBIKEP18sljjpk8d6Q5DtpTUacAzfErkadvbYYV3lb58QWFCNEEY8/t6rEnol0xJw3iF+mAjeqRXL6f9sHY41aGspF98ec5xJZGUdIsxGaA5cCCekSpWdxz2wyOIZqoZvHVNhhP+VG5kDRgVdiBBRQSJ+iA7bEkZaMfl04Jre4uOYSnx1Xy/041lgtW8HUieGfYUZYgjtDhHjloT3KvY6RXmfGkkGDwuYxMDPCmW3TVIsZeAsEjXK+vrxlYlzKz12uB5TqFm1ukNzQHx/Ik/PzNa8FYW+Jrn1gOKw2zj9XNKnZyvr7thlwIspEXZP7KW3+RMgwSCgA6kDJh4FauG+YMyjZ9tCF0Wsst3TeeDTVR9b/sK8CRGeG74dv4T3KvHNrQc6b6vMOY6ZoCmlkSyTLArY7ZJNVBkYV6V5lOngqI0Bzot6VLoFg/PwL0j+74Dbqv5FavwnDrMY2rsqlyqyT3aBVS9dZ9nptcsTQSkU/ekWSTuBxwrWs3ouPotdysRgL4NeZJRmkIDhyM3E=
    local_dir: dpl_cd_upload
    skip_cleanup: true
    on: &2
      repo: travis-ci/cat-party
    bucket: catparty-codedeploy
  - provider: codedeploy
    access_key_id: AKIAJ4XZHIMNKP3WGGHQ
    secret_access_key: *1
    bucket: catparty-codedeploy
    key: latest.zip
    bundle_type: zip
    application: CatPartyDemoApplication
    deployment_group: ProductionDemoFleet
    on: *2